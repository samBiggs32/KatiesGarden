@using KatiesGarden.Web.Client.Models
<div class="m-1 background-colour-primary">
    <div class="image-container">
        <div class="crop">
            <MudCarousel Class="carousel-width w-100 h-25" ShowArrows="@arrows" ShowDelimiters="@delimiters" AutoCycle="@autocycle" TData="object">                
                <ChildContent>
                    <MudCarouselItem Transition="transition" Color="@transitionColour">
                        <div class="d-flex">
                            <img class="d-block" style="max-height: 100%; max-width: 100%; object-fit: contain;" src="Images/ImagesWeLike/@Images.Values[0]" alt="">
                        </div>
                    </MudCarouselItem>
                    <MudCarouselItem Transition="transition" Color="@transitionColour">
                        <div class="d-flex">
                            <img class="d-block w-100" src="Images/ImagesWeLike/@Images.Values[1]" alt="">
                        </div>
                    </MudCarouselItem>
                    <MudCarouselItem Transition="transition" Color="@transitionColour">
                        <div class="d-flex">
                            <img class="d-block w-100" src="Images/ImagesWeLike/@Images.Values[2]" alt="">
                        </div>
                    </MudCarouselItem>
                    <MudCarouselItem Transition="transition" Color="@transitionColour">
                        <div class="d-flex">
                            <img class="d-block w-100" src="Images/ImagesWeLike/@Images.Values[3]" alt="">
                        </div>
                    </MudCarouselItem>
                    <MudCarouselItem Transition="transition" Color="@transitionColour">
                        <div class="d-flex">
                            <img class="d-block w-100" src="Images/ImagesWeLike/@Images.Values[4]" alt="">
                        </div>
                    </MudCarouselItem>
                    <MudCarouselItem Transition="transition" Color="@transitionColour">
                        <div class="d-flex">
                            <img class="d-block w-100" src="Images/ImagesWeLike/@Images.Values[5]" alt="">
                        </div>
                    </MudCarouselItem>
                    <MudCarouselItem Transition="transition" Color="@transitionColour">
                        <div class="d-flex">
                            <img class="d-block w-100" src="Images/ImagesWeLike/@Images.Values[6]" alt="">
                        </div>
                    </MudCarouselItem>
                    <MudCarouselItem Transition="transition" Color="@transitionColour">
                        <div class="d-flex">
                            <img class="d-block w-100" src="Images/ImagesWeLike/@Images.Values[7]" alt="">
                        </div>
                    </MudCarouselItem>
                    <MudCarouselItem Transition="transition" Color="@transitionColour">
                        <div class="d-flex">
                            <img class="d-block w-100" src="Images/ImagesWeLike/@Images.Values[8]" alt="">
                        </div>
                    </MudCarouselItem>
                </ChildContent>
            </MudCarousel>
            <div class="center-left image-text bg-white">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@HeadingText</h5>
                        <p class="card-text">@ParagraphText</p>
                        @if(!HideButton){
                            <a href="@ButtonUrl" class="button-primary btn btn-info contact-button">@ButtonText</a>
                        }                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code{
    private MudCarousel<string> _carousel;

    private int imageWidthNumber = Convert.ToInt32(518 * sizeMultiple);
    private string imageWidth = "100%";

    private int imageHeight = Convert.ToInt32((518 / sizeMultiple) * ratio);

    private const double sizeMultiple = 1.5;
    private const double ratio = 1.50149;

    private bool arrows = false;
    private bool delimiters = false;
    private bool autocycle = true;
    private Transition transition = Transition.Fade;
    private Color transitionColour = Color.Transparent;
    private int numberOfImages = 0;

    public ContactUsBanner() => numberOfImages = Images.Values.Count();

    [Parameter]
    public string ButtonUrl { get; set; }

    [Parameter]
    public string HeadingText { get; set; }

    [Parameter]
    public string ParagraphText { get; set; }

    [Parameter]
    public string ButtonText { get; set; }

    [Parameter]
    public bool HideButton { get; set; }
}